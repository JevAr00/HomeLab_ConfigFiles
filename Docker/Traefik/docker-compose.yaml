---
services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    env_file: .env
    environment:
      APP_DOMAIN: ${APP_DOMAIN}
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - proxy_external
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
      - ./data/config.yml:/config.yml:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth,sslheader"

      # Middlewares
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      
      # Routers
      #HTTP que redirige al HTTPS (requerido si no se usa el redirect-all, definido en el config.yaml)
      #- "traefik.http.routers.traefik.entrypoints=http"
      #- "traefik.http.routers.traefik.rule=Host(`traefik-dashboard.${APP_DOMAIN}`)"
      #- "traefik.http.routers.traefik.middlewares=redirect-to-https"
      #- "traefik.http.routers.traefik.service=noop@internal"
      
      #HTTPS
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-dashboard.${APP_DOMAIN}`)"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=${APP_DOMAIN}"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.${APP_DOMAIN}"
      - "traefik.http.routers.traefik-secure.service=api@internal"

networks:
  proxy:
    external: true
  proxy_external:
    external: true
